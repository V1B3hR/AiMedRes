{
  "timestamp": "2025-09-30T07:13:56.338263",
  "data_shape": [
    300,
    15
  ],
  "methods_used": [
    "random_search"
  ],
  "models_tested": [
    "logistic_regression"
  ],
  "summary": {
    "best_overall_score": 0.7033333333333334,
    "best_method": "random_search",
    "best_model": "logistic_regression",
    "total_models_tested": 1,
    "total_methods_used": 1
  },
  "identified_hyperparameters": {
    "logistic_regression": {
      "C": [
        0.01,
        0.1,
        1,
        10,
        100
      ],
      "penalty": [
        "l1",
        "l2"
      ],
      "solver": [
        "liblinear",
        "saga"
      ],
      "max_iter": [
        1000,
        2000,
        3000
      ]
    }
  },
  "logistic_regression": [
    {
      "method": "Random Search",
      "best_score": 0.7033333333333334,
      "best_params": {
        "solver": "saga",
        "penalty": "l2",
        "max_iter": 2000,
        "C": 1
      },
      "search_time": 2.603417158126831,
      "n_trials": 20,
      "cv_results": {
        "mean_fit_time": "[0.0019711  0.00244021 0.01786537 0.23790102 0.00842509 0.00264387\n 0.06962724 0.07673779 0.00184302 0.3169312  0.00183334 0.00201755\n 0.00381207 0.00342059 0.07805223 0.00721321 0.00119181 0.0015831\n 0.01749563 0.0012527 ]",
        "std_fit_time": "[2.87084230e-04 3.60501727e-04 3.41055748e-03 1.39842723e-01\n 2.91271323e-03 1.21905420e-03 2.61451135e-02 2.80398274e-02\n 6.11775570e-05 6.10456285e-02 3.00774675e-04 4.64950218e-05\n 1.99720897e-04 1.73525490e-05 2.81761928e-02 7.30649233e-04\n 2.64854606e-05 2.74075612e-05 3.62379270e-03 4.08130269e-05]",
        "mean_score_time": "[0.0011672  0.00078721 0.00085497 0.00088758 0.00086474 0.00103607\n 0.00068984 0.00079808 0.0006639  0.00082436 0.00072451 0.00067601\n 0.00066991 0.00066371 0.0009182  0.00069327 0.00067062 0.00065341\n 0.0006927  0.00073628]",
        "std_score_time": "[1.99000868e-04 4.81462457e-05 9.38579789e-05 2.71514277e-05\n 2.54469277e-04 7.45579409e-04 2.27579744e-05 1.39017423e-04\n 1.95460198e-05 7.92837818e-05 2.80537829e-04 1.36874692e-05\n 1.09718147e-05 1.28740734e-05 2.83657596e-05 2.81916839e-05\n 2.44724797e-06 9.54222522e-06 2.65275787e-05 7.78861208e-05]",
        "param_solver": "['liblinear' 'saga' 'liblinear' 'saga' 'saga' 'liblinear' 'saga'\n 'liblinear' 'liblinear' 'saga' 'liblinear' 'liblinear' 'saga' 'saga'\n 'liblinear' 'saga' 'liblinear' 'liblinear' 'liblinear' 'liblinear']",
        "param_penalty": "['l1' 'l1' 'l1' 'l1' 'l1' 'l2' 'l1' 'l1' 'l1' 'l1' 'l2' 'l2' 'l2' 'l2'\n 'l1' 'l1' 'l1' 'l2' 'l1' 'l1']",
        "param_max_iter": "[1000 2000 1000 3000 1000 2000 3000 1000 1000 3000 3000 1000 2000 1000\n 2000 2000 3000 2000 2000 2000]",
        "param_C": "[0.01 0.01 10.0 10.0 0.1 100.0 1.0 100.0 0.1 100.0 10.0 100.0 1.0 0.01\n 100.0 0.1 0.01 0.01 10.0 0.01]",
        "params": [
          {
            "solver": "liblinear",
            "penalty": "l1",
            "max_iter": 1000,
            "C": 0.01
          },
          {
            "solver": "saga",
            "penalty": "l1",
            "max_iter": 2000,
            "C": 0.01
          },
          {
            "solver": "liblinear",
            "penalty": "l1",
            "max_iter": 1000,
            "C": 10
          },
          {
            "solver": "saga",
            "penalty": "l1",
            "max_iter": 3000,
            "C": 10
          },
          {
            "solver": "saga",
            "penalty": "l1",
            "max_iter": 1000,
            "C": 0.1
          },
          {
            "solver": "liblinear",
            "penalty": "l2",
            "max_iter": 2000,
            "C": 100
          },
          {
            "solver": "saga",
            "penalty": "l1",
            "max_iter": 3000,
            "C": 1
          },
          {
            "solver": "liblinear",
            "penalty": "l1",
            "max_iter": 1000,
            "C": 100
          },
          {
            "solver": "liblinear",
            "penalty": "l1",
            "max_iter": 1000,
            "C": 0.1
          },
          {
            "solver": "saga",
            "penalty": "l1",
            "max_iter": 3000,
            "C": 100
          },
          {
            "solver": "liblinear",
            "penalty": "l2",
            "max_iter": 3000,
            "C": 10
          },
          {
            "solver": "liblinear",
            "penalty": "l2",
            "max_iter": 1000,
            "C": 100
          },
          {
            "solver": "saga",
            "penalty": "l2",
            "max_iter": 2000,
            "C": 1
          },
          {
            "solver": "saga",
            "penalty": "l2",
            "max_iter": 1000,
            "C": 0.01
          },
          {
            "solver": "liblinear",
            "penalty": "l1",
            "max_iter": 2000,
            "C": 100
          },
          {
            "solver": "saga",
            "penalty": "l1",
            "max_iter": 2000,
            "C": 0.1
          },
          {
            "solver": "liblinear",
            "penalty": "l1",
            "max_iter": 3000,
            "C": 0.01
          },
          {
            "solver": "liblinear",
            "penalty": "l2",
            "max_iter": 2000,
            "C": 0.01
          },
          {
            "solver": "liblinear",
            "penalty": "l1",
            "max_iter": 2000,
            "C": 10
          },
          {
            "solver": "liblinear",
            "penalty": "l1",
            "max_iter": 2000,
            "C": 0.01
          }
        ],
        "split0_test_score": "[0.35       0.35       0.7        0.73333333 0.73333333 0.7\n 0.73333333 0.7        0.66666667 0.73333333 0.7        0.7\n 0.73333333 0.65       0.7        0.73333333 0.35       0.65\n 0.7        0.35      ]",
        "split1_test_score": "[0.35       0.35       0.65       0.66666667 0.65       0.65\n 0.68333333 0.65       0.66666667 0.66666667 0.65       0.65\n 0.66666667 0.7        0.65       0.65       0.35       0.68333333\n 0.65       0.35      ]",
        "split2_test_score": "[0.33333333 0.33333333 0.63333333 0.65       0.58333333 0.63333333\n 0.65       0.63333333 0.61666667 0.65       0.63333333 0.63333333\n 0.65       0.6        0.63333333 0.58333333 0.33333333 0.61666667\n 0.63333333 0.33333333]",
        "split3_test_score": "[0.33333333 0.33333333 0.76666667 0.75       0.75       0.76666667\n 0.75       0.76666667 0.73333333 0.75       0.76666667 0.76666667\n 0.78333333 0.76666667 0.76666667 0.75       0.33333333 0.71666667\n 0.76666667 0.33333333]",
        "split4_test_score": "[0.33333333 0.33333333 0.71666667 0.68333333 0.66666667 0.71666667\n 0.68333333 0.71666667 0.63333333 0.68333333 0.71666667 0.71666667\n 0.68333333 0.63333333 0.71666667 0.66666667 0.33333333 0.63333333\n 0.71666667 0.33333333]",
        "mean_test_score": "[0.34       0.34       0.69333333 0.69666667 0.67666667 0.69333333\n 0.7        0.69333333 0.66333333 0.69666667 0.69333333 0.69333333\n 0.70333333 0.67       0.69333333 0.67666667 0.34       0.66\n 0.69333333 0.34      ]",
        "std_test_score": "[0.00816497 0.00816497 0.04784233 0.03858612 0.0601849  0.04784233\n 0.03651484 0.04784233 0.04       0.03858612 0.04784233 0.04784233\n 0.04876246 0.05811865 0.04784233 0.0601849  0.00816497 0.0359011\n 0.04784233 0.00816497]",
        "rank_test_score": "[17 17  5  3 12  5  2  5 15  3  5  5  1 14  5 12 17 16  5 17]"
      }
    }
  ]
}